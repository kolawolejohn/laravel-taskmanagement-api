{
    "openapi": "3.0.0",
    "info": {
        "title": "Task Management API",
        "description": "API documentation for Task Management system",
        "version": "1.0.0"
    },
    "paths": {
        "/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get paginated list of tasks, can be filtered by status and search by title",
                "operationId": "6a93d54730cde509d735e538ab6800f6",
                "responses": {
                    "200": {
                        "description": "Paginated tasks response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTasksResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "operationId": "9b481c0ed5fdfa1a592d70ba39a348ee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{task}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Fetch a single task by ID",
                "operationId": "2d3bd1c8c8bbb942e64655b95d2ccd31",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a task by ID",
                "operationId": "2e76d38ee629d5be516c498ed02ff818",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Task deleted successfully"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        },
        "/tasks/{$task}": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Updates an existing task",
                "operationId": "4ec04aade0431eb935a521d95ac3ca73",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task Updated Succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Task": {
                "required": [
                    "id",
                    "title",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "title": {
                        "type": "string",
                        "example": "Finish the project"
                    },
                    "description": {
                        "type": "string",
                        "example": "Complete all pending tasks"
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "scheduled_for": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-22T14:00:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-21T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-22T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "Pagination": {
                "properties": {
                    "total": {
                        "type": "integer",
                        "example": 50
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 10
                    },
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 5
                    },
                    "from": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 10,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedTasksResponse": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object"
            },
            "TaskStoreRequest": {
                "required": [
                    "title",
                    "status"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "New Task"
                    },
                    "description": {
                        "type": "string",
                        "example": "Task details"
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    }
                },
                "type": "object"
            },
            "TaskUpdateRequest": {
                "required": [
                    "title",
                    "status"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Updated Task Title"
                    },
                    "description": {
                        "type": "string",
                        "example": "Updated task description"
                    },
                    "status": {
                        "type": "string",
                        "example": "completed"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Tasks",
            "description": "Endpoints related to tasks"
        }
    ]
}